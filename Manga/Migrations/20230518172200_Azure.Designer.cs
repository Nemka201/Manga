// <auto-generated />
using System;
using Manga.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manga.Migrations
{
    [DbContext(typeof(PaginaContext))]
    [Migration("20230518172200_Azure")]
    partial class Azure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Manga.Models.Entities.Capitulo", b =>
                {
                    b.Property<int>("Idcapitulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDcapitulo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcapitulo"), 1L, 1);

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("date")
                        .HasColumnName("fechaCarga");

                    b.Property<int>("Idserie")
                        .HasColumnType("int")
                        .HasColumnName("IDserie");

                    b.Property<string>("Imagenes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("imagenes");

                    b.Property<int>("NumeroCapitulo")
                        .HasColumnType("int")
                        .HasColumnName("numeroCapitulo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("titulo")
                        .IsFixedLength();

                    b.Property<bool?>("Visto")
                        .HasColumnType("bit")
                        .HasColumnName("visto");

                    b.Property<int?>("Volumen")
                        .HasColumnType("int")
                        .HasColumnName("volumen");

                    b.HasKey("Idcapitulo");

                    b.ToTable("Capitulos");
                });

            modelBuilder.Entity("Manga.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("Idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDcategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcategoria"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1500)
                        .HasColumnType("nchar(1500)")
                        .HasColumnName("descripcion")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("nombre")
                        .IsFixedLength();

                    b.HasKey("Idcategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Manga.Models.Entities.Compra", b =>
                {
                    b.Property<int>("Idcompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDcompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcompra"), 1L, 1);

                    b.Property<int>("Iduser")
                        .HasColumnType("int")
                        .HasColumnName("IDuser");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.Property<int>("Unidades")
                        .HasColumnType("int")
                        .HasColumnName("unidades");

                    b.Property<int>("Volumen")
                        .HasColumnType("int")
                        .HasColumnName("volumen");

                    b.HasKey("Idcompra");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("Manga.Models.Entities.Serie", b =>
                {
                    b.Property<int>("Idserie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSerie");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idserie"), 1L, 1);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("autor");

                    b.Property<int?>("Capitulos")
                        .HasColumnType("int")
                        .HasColumnName("capitulos");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("categoria");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<int?>("Favoritos")
                        .HasColumnType("int")
                        .HasColumnName("favoritos");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("IDUser");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("RutaBanner")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("banner");

                    b.Property<string>("RutaPortada")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("portada");

                    b.Property<string>("Serializacion")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("serializacion")
                        .IsFixedLength();

                    b.Property<int?>("Volumenes")
                        .HasColumnType("int")
                        .HasColumnName("volumenes");

                    b.HasKey("Idserie");

                    b.ToTable("Serie", (string)null);
                });

            modelBuilder.Entity("Manga.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Carrito")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("carrito");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("clave");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Favoritos")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("favoritos");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("RutaFoto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("rutaFoto");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Manga.Models.Entities.Volumene", b =>
                {
                    b.Property<int>("Idvol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDvol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idvol"), 1L, 1);

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasColumnName("imagen");

                    b.Property<double?>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("Idvol");

                    b.ToTable("Volumenes");
                });
#pragma warning restore 612, 618
        }
    }
}
